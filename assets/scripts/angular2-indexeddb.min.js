System.register(["angular2/core"],function(a){"use strict";var b,c,d,e,f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0};return{setters:[function(a){b=a}],execute:function(){c=function(){function a(a,b){this.utils=new d,this.dbWrapper=new e(a,b)}return a.prototype.createStore=function(a,b){var c=this,d=this,e=new Promise(function(e,f){c.dbWrapper.dbVersion=a;var g=c.utils.indexedDB.open(c.dbWrapper.dbName,a);g.onsuccess=function(a){d.dbWrapper.db=g.result,e()},g.onerror=function(a){f("IndexedDB error: "+a.target.errorCode)},g.onupgradeneeded=function(a){b(a,d.dbWrapper.db)}});return e},a.prototype.getByKey=function(a,b){var c=this,d=new Promise(function(d,e){c.dbWrapper.validateBeforeTransaction(a,e);var f,g,h=c.dbWrapper.createTransaction({storeName:a,dbMode:c.utils.dbMode.readonly,error:function(a){e(a)},complete:function(a){d(f)}}),i=h.objectStore(a);g=i.get(b),g.onsuccess=function(a){f=a.target.result}});return d},a.prototype.getAll=function(a){var b=this,c=new Promise(function(c,d){b.dbWrapper.validateBeforeTransaction(a,d);var e=b.dbWrapper.createTransaction({storeName:a,dbMode:b.utils.dbMode.readonly,error:function(a){d(a)},complete:function(a){c(g)}}),f=e.objectStore(a),g=[],h=f.openCursor();h.onerror=function(a){d(a)},h.onsuccess=function(a){var b=a.target.result;b&&(g.push(b.value),b["continue"]())}});return c},a.prototype.add=function(a,b,c){var d=this,e=new Promise(function(e,f){d.dbWrapper.validateBeforeTransaction(a,f);var g=d.dbWrapper.createTransaction({storeName:a,dbMode:d.utils.dbMode.readwrite,error:function(a){f(a)},complete:function(a){e({key:c,value:b})}}),h=g.objectStore(a);h.add(b,c)});return e},a.prototype.update=function(a,b,c){var d=this,e=new Promise(function(e,f){d.dbWrapper.validateBeforeTransaction(a,f);var g=d.dbWrapper.createTransaction({storeName:a,dbMode:d.utils.dbMode.readwrite,error:function(a){f(a)},complete:function(a){e(b)},abort:function(a){f(a)}}),h=g.objectStore(a);h.put(b,c)});return e},a.prototype["delete"]=function(a,b){var c=this,d=new Promise(function(d,e){c.dbWrapper.validateBeforeTransaction(a,e);var f=c.dbWrapper.createTransaction({storeName:a,dbMode:c.utils.dbMode.readwrite,error:function(a){e(a)},complete:function(a){d()},abort:function(a){e(a)}}),g=f.objectStore(a);g["delete"](b)});return d},a.prototype.openCursor=function(a,b){var c=this,d=new Promise(function(d,e){c.dbWrapper.validateBeforeTransaction(a,e);var f=c.dbWrapper.createTransaction({storeName:a,dbMode:c.utils.dbMode.readonly,error:function(a){e(a)},complete:function(a){d()},abort:function(a){e(a)}}),g=f.objectStore(a),h=g.openCursor();h.onsuccess=function(a){b(a),d()}});return d},a.prototype.clear=function(a){var b=this,c=new Promise(function(c,d){b.dbWrapper.validateBeforeTransaction(a,d);var e=b.dbWrapper.createTransaction({storeName:a,dbMode:b.utils.dbMode.readwrite,error:function(a){d(a)},complete:function(a){c()},abort:function(a){d(a)}}),f=e.objectStore(a);f.clear(),c()});return c},a.prototype.getByIndex=function(a,b,c){var d=this,e=new Promise(function(e,f){d.dbWrapper.validateBeforeTransaction(a,f);var g,h=d.dbWrapper.createTransaction({storeName:a,dbMode:d.utils.dbMode.readonly,error:function(a){f(a)},complete:function(a){e(g)},abort:function(a){f(a)}}),i=h.objectStore(a),j=i.index(b),k=j.get(c);k.onsuccess=function(a){g=a.target.result}});return e},a=f([b.Injectable(),g("design:paramtypes",[Object,Object])],a)}(),a("AngularIndexedDB",c),d=function(){function a(){this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,this.dbMode={readonly:"readonly",readwrite:"readwrite"}}return a}(),e=function(){function a(a,b){this.dbName=a,this.dbVersion=b||1,this.db=null,this.storeNames=[]}return a.prototype.validateStoreName=function(a){return this.db.objectStoreNames.contains(a)},a.prototype.validateBeforeTransaction=function(a,b){this.db||b("You need to use the createStore function to create a database before you query it!"),this.validateStoreName(a)||b("objectStore does not exists: "+a)},a.prototype.createTransaction=function(a){var b=this.db.transaction(a.storeName,a.dbMode);return b.onerror=a.error,b.oncomplete=a.complete,b.onabort=a.abort,b},a}()}}});
//# sourceMappingURL=angular2-indexeddb.min.js.map